# Similar to backend's
name: Build and Run
on:
  push: # Triggers the workflow on push events in any branch
    branches:
      - main
  #    - desarrollo
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    name: build and push all images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout        #Paso de checkout
      uses: actions/checkout@v2
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Prepare tags    #Paso de preparación de etiquetas para las imágenes
      id: prep              
      run: |                #Nombre de imágenes (las de rama main son stable, el resto con nombre de rama)
        REGISTRY="ghcr.io/unizar-30226-2021-03/frontend"
        VERSION="-dvlp:"${{ steps.extract_branch.outputs.branch }}
        if [[ ${{ steps.extract_branch.outputs.branch }} == "main" ]]; then 
          VERSION=":stable"
        fi
        TAG_BE="${REGISTRY}/keypax-react-app${VERSION}"
        TAG_NX="${REGISTRY}/nginx-certbot:stable"
        echo ${TAG_BE}
        echo ::set-output name=tagbe::${TAG_BE}
        echo ${TAG_NX}
        echo ::set-output name=tagnx::${TAG_NX}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: all
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.RWD_packages }} 
    - name: Build and Push BE-container         #IMAGEN DE CONTENEDOR DE BACKEND
      uses: docker/build-push-action@v2
      with:
        file: ./app/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.prep.outputs.tagbe }}
    - name: Build and Push nx                   #IMAGEN DE CONTENEDOR DE NGINX
      uses: docker/build-push-action@v2
      with:
        file: ./nginx/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.prep.outputs.tagnx }}
    - name: SSH into Server and run             #Mediante Secrets conecta a server y arranca back
      uses: fifsky/ssh-action@master
      with:
        args: "-tt"
        command: |
          mkdir -p "frontend-app" && cd $_ 
          curl -L https://raw.githubusercontent.com/UNIZAR-30226-2021-03/frontend/main/deployment/docker-compose.yml > template.yml
          echo -e "s/\${email}/${{ secrets.EMAIL }}/" > /tmp/replace.txt
          sed -f /tmp/replace.txt ./template.yml > docker-compose.yml
          curl -L https://raw.githubusercontent.com/UNIZAR-30226-2021-03/frontend/main/deployment/start.sh > start.sh
          chmod u+x start.sh
          ./start.sh
        host: ${{ secrets.FRONTEND_HOST }}
        user: ${{ secrets.FRONTEND_HOST_USER }} 
        key:  ${{ secrets.FRONTEND_HOST_KEY}}